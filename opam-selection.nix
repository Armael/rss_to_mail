### This file is generated by opam2nix.

self:
let
    lib = self.lib;
    opam-commit = "dbbd0be11808e3ff74e69c3cc0ee5889684cf7bb";
    pkgs = self.pkgs;
    repo = (pkgs.fetchFromGitHub) 
    {
      owner = "ocaml";
      repo = "opam-repository";
      rev = opam-commit;
      sha256 = "0njm5qs8jfrfbndxvyv4qk47bi1ajpr8qc2pfkxwzbrvws8ym334";
    };
    repoPath = self.repoPath;
    selection = self.selection;
in
{
  format-version = 4;
  ocaml-version = "4.10.0";
  opam-commit = opam-commit;
  selection = 
  {
    angstrom = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        bigstringaf = selection.bigstringaf;
        dune = selection.dune;
        ocaml = selection.ocaml;
        result = selection.result;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:192g8jhvw3nvipr5a4iljlgmfzjgh24yd1hm3ls63991vn52zd0y";
        package = "packages/angstrom/angstrom.0.13.0";
      };
      pname = "angstrom";
      src = pkgs.fetchurl 
      {
        sha256 = "08zbjixwkhrkbyhp2raap1b8ah502piwaadzydmb82ivgc6h94k7";
        url = "https://github.com/inhabitedtype/angstrom/archive/0.13.0.tar.gz";
      };
      version = "0.13.0";
    };
    asn1-combinators = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        bigarray-compat = selection.bigarray-compat;
        cstruct = selection.cstruct;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ptime = selection.ptime;
        stdlib-shims = selection.stdlib-shims;
        zarith = selection.zarith;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1bvkzph2gpzq8c94b0blgg8kgkqj9rg9s1zhxjbd2nbz9i4k5k29";
        package = "packages/asn1-combinators/asn1-combinators.0.2.2";
      };
      pname = "asn1-combinators";
      src = pkgs.fetchurl 
      {
        sha256 = "0c9n3nki3drjwn7yv2pg7nzyzsi409laq70830wh147hvvwxbsy9";
        url = "https://github.com/mirleft/ocaml-asn1-combinators/releases/download/v0.2.2/asn1-combinators-v0.2.2.tbz";
      };
      version = "0.2.2";
    };
    astring = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0y7bxwdmjwxzad2fhfsvzj3idw4sw4z2zb3n8yr4fkla9s9hbma9";
        package = "packages/astring/astring.0.8.3";
      };
      pname = "astring";
      src = pkgs.fetchurl 
      {
        sha256 = "0ixjwc3plrljvj24za3l9gy0w30lsbggp8yh02lwrzw61ls4cri0";
        url = "http://erratique.ch/software/astring/releases/astring-0.8.3.tbz";
      };
      version = "0.8.3";
    };
    base = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        ocaml = selection.ocaml;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:12ac88qx6km98pn95lfx5hgl8m697x1kmmb9dkqv5fyr43m97l55";
        package = "packages/base/base.v0.13.2";
      };
      pname = "base";
      src = pkgs.fetchurl 
      {
        sha256 = "0nndylkdwkndg4b6bb7g5iix2cbjxaiwnybpr4c88cpc8qd7cpgw";
        url = "https://github.com/janestreet/base/archive/v0.13.2.tar.gz";
      };
      version = "v0.13.2";
    };
    base-bytes = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0a68lmbf68jgm1i3b59j2sc3ha9yhv4678f9mfwwvczw88prq7l3";
        package = "packages/base-bytes/base-bytes.base";
      };
      pname = "base-bytes";
      src = null;
      version = "base";
    };
    base-threads = 
    {
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1c4bpyh61ampjgk5yh3inrgcpf1z1xv0pshn54ycmpn4dyzv0p2x";
        package = "packages/base-threads/base-threads.base";
      };
      pname = "base-threads";
      src = null;
      version = "base";
    };
    base-unix = 
    {
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0mpsvb7684g723ylngryh15aqxg3blb7hgmq2fsqjyppr36iyzwg";
        package = "packages/base-unix/base-unix.base";
      };
      pname = "base-unix";
      src = null;
      version = "base";
    };
    base64 = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        base-bytes = selection.base-bytes;
        bos = selection.bos or null;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        ocaml = selection.ocaml;
        rresult = selection.rresult or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0ipgmb0bghmh3svszlpzlsy1b7j084gh818pwqic4dh42w3g3nlb";
        package = "packages/base64/base64.3.4.0";
      };
      pname = "base64";
      src = pkgs.fetchurl 
      {
        sha256 = "0d0n5gd4nkdsz14jnxq13f1f7rzxmndg5xql039a8wfppmazd70w";
        url = "https://github.com/mirage/ocaml-base64/releases/download/v3.4.0/base64-v3.4.0.tbz";
      };
      version = "3.4.0";
    };
    bigarray-compat = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0lbmlg7kqy0bvca7v5qib69ayiryy5hlkzhzfg7qwq9n29aygc97";
        package = "packages/bigarray-compat/bigarray-compat.1.0.0";
      };
      pname = "bigarray-compat";
      src = pkgs.fetchurl 
      {
        sha256 = "1bpmmnxb1yx72aqlbdaqfl18rgz1cq9cf6cqvnfl88mz5dfr4x0d";
        url = "https://github.com/mirage/bigarray-compat/archive/v1.0.0.tar.gz";
      };
      version = "1.0.0";
    };
    bigstringaf = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        bigarray-compat = selection.bigarray-compat;
        dune = selection.dune;
        mirage-xen-posix = selection.mirage-xen-posix or null;
        ocaml = selection.ocaml;
        ocaml-freestanding = selection.ocaml-freestanding or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1nh5w6smffl95c6h1ha5k4w83hzh20cwwl272nl56lwwyhx3wyiv";
        package = "packages/bigstringaf/bigstringaf.0.6.1";
      };
      pname = "bigstringaf";
      src = pkgs.fetchurl 
      {
        sha256 = "0nc9cxc2hf1qklkwl3mn46yrsjwdlv9j1824v2nagj3d021ys52s";
        url = "https://github.com/inhabitedtype/bigstringaf/archive/0.6.1.tar.gz";
      };
      version = "0.6.1";
    };
    cmdliner = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:05qlm4yp6124w2z10dpdchldfrmgmcr6h31rnxp8qs8mk0xzx48z";
        package = "packages/cmdliner/cmdliner.1.0.4";
      };
      pname = "cmdliner";
      src = pkgs.fetchurl 
      {
        sha256 = "1h04q0zkasd0mw64ggh4y58lgzkhg6yhzy60lab8k8zq9ba96ajw";
        url = "http://erratique.ch/software/cmdliner/releases/cmdliner-1.0.4.tbz";
      };
      version = "1.0.4";
    };
    cohttp = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        base64 = selection.base64;
        dune = selection.dune;
        fieldslib = selection.fieldslib;
        fmt = selection.fmt or null;
        jsonm = selection.jsonm;
        ocaml = selection.ocaml;
        ppx_fields_conv = selection.ppx_fields_conv;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        re = selection.re;
        sexplib0 = selection.sexplib0;
        stdlib-shims = selection.stdlib-shims;
        stringext = selection.stringext;
        uri = selection.uri;
        uri-sexp = selection.uri-sexp;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0gn5xnaaaqp7mpki9c8751nmhbrq08h0nhqjdqrijjy8vbqx0rwl";
        package = "packages/cohttp/cohttp.2.5.1";
      };
      pname = "cohttp";
      src = pkgs.fetchurl 
      {
        sha256 = "0im91mi3nxzqfd7fs5r0zg5gsparfnf5zaz13mpw247hkd3y3396";
        url = "https://github.com/mirage/ocaml-cohttp/releases/download/v2.5.1/cohttp-v2.5.1.tbz";
      };
      version = "2.5.1";
    };
    cohttp-lwt = 
    {
      opamInputs = 
      {
        cohttp = selection.cohttp;
        dune = selection.dune;
        logs = selection.logs;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1qcmrhsq1j1babhw0kyigql29y4yb38gziydma59yy31wvxll3y9";
        package = "packages/cohttp-lwt/cohttp-lwt.2.5.1";
      };
      pname = "cohttp-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "0im91mi3nxzqfd7fs5r0zg5gsparfnf5zaz13mpw247hkd3y3396";
        url = "https://github.com/mirage/ocaml-cohttp/releases/download/v2.5.1/cohttp-v2.5.1.tbz";
      };
      version = "2.5.1";
    };
    cohttp-lwt-unix = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        cmdliner = selection.cmdliner;
        cohttp-lwt = selection.cohttp-lwt;
        conduit-lwt-unix = selection.conduit-lwt-unix;
        dune = selection.dune;
        fmt = selection.fmt;
        logs = selection.logs;
        lwt = selection.lwt;
        magic-mime = selection.magic-mime;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0an32kz3zni1jigdxxwc1zy1icc3vsyllzdqbvimxaws5gl8szr0";
        package = "packages/cohttp-lwt-unix/cohttp-lwt-unix.2.5.1";
      };
      pname = "cohttp-lwt-unix";
      src = pkgs.fetchurl 
      {
        sha256 = "0im91mi3nxzqfd7fs5r0zg5gsparfnf5zaz13mpw247hkd3y3396";
        url = "https://github.com/mirage/ocaml-cohttp/releases/download/v2.5.1/cohttp-v2.5.1.tbz";
      };
      version = "2.5.1";
    };
    colombe = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        angstrom = selection.angstrom;
        dune = selection.dune;
        emile = selection.emile or null;
        fmt = selection.fmt;
        ipaddr = selection.ipaddr;
        ocaml = selection.ocaml;
        ocaml-syntax-shims = selection.ocaml-syntax-shims;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1bhyh2z7dn91sx6vf7xw7s4pkpnkks21gn8v5afvq0vsv6kzpwyr";
        package = "packages/colombe/colombe.0.2.0";
      };
      pname = "colombe";
      src = pkgs.fetchurl 
      {
        sha256 = "1bbff1a9bc8hrlfk8b4gf4cdnv8zph3rkcz28wd00vhs1rpp7hhj";
        url = "https://github.com/mirage/colombe/releases/download/v0.2.0/colombe-v0.2.0.tbz";
      };
      version = "0.2.0";
    };
    conduit = 
    {
      opamInputs = 
      {
        astring = selection.astring;
        dune = selection.dune;
        ipaddr = selection.ipaddr;
        ipaddr-sexp = selection.ipaddr-sexp;
        logs = selection.logs;
        ocaml = selection.ocaml;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        sexplib = selection.sexplib;
        uri = selection.uri;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1vxcq7vb70z7qg35hbzclqj28x73sqdic0aacmzmz2f6adpi5lav";
        package = "packages/conduit/conduit.2.1.0";
      };
      pname = "conduit";
      src = pkgs.fetchurl 
      {
        sha256 = "0wkyyzc194x1cvb7khxjzkf0jch5m7y6bmxmq5vxrm3yrbxd2kbv";
        url = "https://github.com/mirage/ocaml-conduit/releases/download/v2.1.0/conduit-v2.1.0.tbz";
      };
      version = "2.1.0";
    };
    conduit-lwt = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        conduit = selection.conduit;
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        sexplib = selection.sexplib;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:06w2sfccs0awiscp7h63klxxj4p4mi9b202hqc02m15f8cfgf91q";
        package = "packages/conduit-lwt/conduit-lwt.2.1.0";
      };
      pname = "conduit-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "0wkyyzc194x1cvb7khxjzkf0jch5m7y6bmxmq5vxrm3yrbxd2kbv";
        url = "https://github.com/mirage/ocaml-conduit/releases/download/v2.1.0/conduit-v2.1.0.tbz";
      };
      version = "2.1.0";
    };
    conduit-lwt-unix = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        conduit-lwt = selection.conduit-lwt;
        dune = selection.dune;
        ipaddr = selection.ipaddr;
        ipaddr-sexp = selection.ipaddr-sexp;
        launchd = selection.launchd or null;
        lwt = selection.lwt;
        lwt_ssl = selection.lwt_ssl or null;
        ocaml = selection.ocaml;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        tls = selection.tls or null;
        uri = selection.uri;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:00vyzrb2ikjnn3w4wlxcy3n9w9gmay8dw4av844c213kf3zw1r1y";
        package = "packages/conduit-lwt-unix/conduit-lwt-unix.2.1.0";
      };
      pname = "conduit-lwt-unix";
      src = pkgs.fetchurl 
      {
        sha256 = "0wkyyzc194x1cvb7khxjzkf0jch5m7y6bmxmq5vxrm3yrbxd2kbv";
        url = "https://github.com/mirage/ocaml-conduit/releases/download/v2.1.0/conduit-v2.1.0.tbz";
      };
      version = "2.1.0";
    };
    conf-gmp = 
    {
      buildInputs = [ (pkgs.gmp or null) (pkgs.gmp-dev or null)
                       (pkgs.gmp-devel or null) (pkgs.libgmp-dev or null) ];
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0a8ph62kvn3b7q6phczgs6gacw2gya6xiiw6wc6fms3qyn0r5gbc";
        package = "packages/conf-gmp/conf-gmp.1";
      };
      pname = "conf-gmp";
      src = null;
      version = "1";
    };
    conf-gmp-powm-sec = 
    {
      opamInputs = {
                     conf-gmp = selection.conf-gmp;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1d93vlm56dxxv2kv8rkjz2p34iv2l5is0c4csn3jiv2k53ldcsma";
        package = "packages/conf-gmp-powm-sec/conf-gmp-powm-sec.1";
      };
      pname = "conf-gmp-powm-sec";
      src = null;
      version = "1";
    };
    conf-libssl = 
    {
      buildInputs = [ (pkgs.openssl) ];
      opamInputs = 
      {
        conf-pkg-config = selection.conf-pkg-config;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1axp8gy2nfbc5l2wycl8bs1gx7dc26sqs9h1vvcdl6l35l9dvjyf";
        package = "packages/conf-libssl/conf-libssl.1";
      };
      pname = "conf-libssl";
      src = null;
      version = "1";
    };
    conf-m4 = 
    {
      buildInputs = [ (pkgs.m4) ];
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1jlhg718lz35jyr5w0sgvg5ycplhnd8653rc4980yci8p3z1vlxs";
        package = "packages/conf-m4/conf-m4.1";
      };
      pname = "conf-m4";
      src = null;
      version = "1";
    };
    conf-perl = 
    {
      buildInputs = [ (pkgs.perl) ];
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:090hjg76q1q651vwh38k0jmmr8mp465m7bfgnw5aqxpv1kxb4f12";
        package = "packages/conf-perl/conf-perl.1";
      };
      pname = "conf-perl";
      src = null;
      version = "1";
    };
    conf-pkg-config = 
    {
      buildInputs = [ (pkgs.pkgconfig) ];
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:13czmpbnwmgp2lp443jb8zb199hnkf8afqk38z57v2dsw0sp7250";
        package = "packages/conf-pkg-config/conf-pkg-config.1.2";
      };
      pname = "conf-pkg-config";
      src = null;
      version = "1.2";
    };
    cppo = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0hdl429cpb4bg9gc07rxs14p7d3r3nfi3vw6s38c6xhf412nl611";
        package = "packages/cppo/cppo.1.6.6";
      };
      pname = "cppo";
      src = pkgs.fetchurl 
      {
        sha256 = "185q0x54id7pfc6rkbjscav8sjkrg78fz65rgfw7b4bqlyb2j9z7";
        url = "https://github.com/ocaml-community/cppo/releases/download/v1.6.6/cppo-v1.6.6.tbz";
      };
      version = "1.6.6";
    };
    cstruct = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        bigarray-compat = selection.bigarray-compat;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:02qc5jzryd2az68bz0kf04jlxlc46rj0yxd1wd3yiwyi42xqi88w";
        package = "packages/cstruct/cstruct.5.1.1";
      };
      pname = "cstruct";
      src = pkgs.fetchurl 
      {
        sha256 = "1wzy15x5ra0v3l3rww6iamnv05za58wfvicrwkz74y2zp0ng9lam";
        url = "https://github.com/mirage/ocaml-cstruct/releases/download/v5.1.1/cstruct-v5.1.1.tbz";
      };
      version = "5.1.1";
    };
    cstruct-sexp = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        cstruct = selection.cstruct;
        dune = selection.dune;
        ocaml = selection.ocaml;
        sexplib = selection.sexplib;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1ngz2y083wnk4v2d01vgbl236m88wxzs27qqvr4mc6n483v2n2dh";
        package = "packages/cstruct-sexp/cstruct-sexp.5.1.1";
      };
      pname = "cstruct-sexp";
      src = pkgs.fetchurl 
      {
        sha256 = "1wzy15x5ra0v3l3rww6iamnv05za58wfvicrwkz74y2zp0ng9lam";
        url = "https://github.com/mirage/ocaml-cstruct/releases/download/v5.1.1/cstruct-v5.1.1.tbz";
      };
      version = "5.1.1";
    };
    cstruct-unix = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        cstruct = selection.cstruct;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1wz2ynhxaz44aqk9qdchmipqayykpjwxjxkydl0qq4dvdmfk6419";
        package = "packages/cstruct-unix/cstruct-unix.5.1.1";
      };
      pname = "cstruct-unix";
      src = pkgs.fetchurl 
      {
        sha256 = "1wzy15x5ra0v3l3rww6iamnv05za58wfvicrwkz74y2zp0ng9lam";
        url = "https://github.com/mirage/ocaml-cstruct/releases/download/v5.1.1/cstruct-v5.1.1.tbz";
      };
      version = "5.1.1";
    };
    domain-name = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        astring = selection.astring;
        dune = selection.dune;
        fmt = selection.fmt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1243f92lmszqdf9qvh1v6wv3jd9r5k2h1fhbqqfw9j3imjdfhw0a";
        package = "packages/domain-name/domain-name.0.3.0";
      };
      pname = "domain-name";
      src = pkgs.fetchurl 
      {
        sha256 = "12kc9p2a2fi1ipc2hyhbzivxpph3npglxwdgvhd6v20rqqdyvnad";
        url = "https://github.com/hannesm/domain-name/releases/download/v0.3.0/domain-name-v0.3.0.tbz";
      };
      version = "0.3.0";
    };
    dune = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads;
        base-unix = selection.base-unix;
        ocaml = selection.ocaml or null;
        ocamlfind-secondary = selection.ocamlfind-secondary or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1csjmrdsh60d7ffa8yrmcabmlram3is8qm65ia73y3chjrjjkar4";
        package = "packages/dune/dune.2.5.1";
      };
      pname = "dune";
      src = pkgs.fetchurl 
      {
        sha256 = "0az5ih18wadsp3ljagvws1i7vf0vpg24h75ariy0v3i0gyld6xwg";
        url = "https://github.com/ocaml/dune/releases/download/2.5.1/dune-2.5.1.tbz";
      };
      version = "2.5.1";
    };
    dune-configurator = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        dune-private-libs = selection.dune-private-libs;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:040kdgq619076dgyq5djfsmh7bmlmrrzhvmhakvc7myx45z4vqzh";
        package = "packages/dune-configurator/dune-configurator.2.5.1";
      };
      pname = "dune-configurator";
      src = pkgs.fetchurl 
      {
        sha256 = "0az5ih18wadsp3ljagvws1i7vf0vpg24h75ariy0v3i0gyld6xwg";
        url = "https://github.com/ocaml/dune/releases/download/2.5.1/dune-2.5.1.tbz";
      };
      version = "2.5.1";
    };
    dune-private-libs = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:102w2m95z7jz7ndcgcxikyx2w15kpdwmjr0ivgwvs85l5jm0n7xf";
        package = "packages/dune-private-libs/dune-private-libs.2.5.1";
      };
      pname = "dune-private-libs";
      src = pkgs.fetchurl 
      {
        sha256 = "0az5ih18wadsp3ljagvws1i7vf0vpg24h75ariy0v3i0gyld6xwg";
        url = "https://github.com/ocaml/dune/releases/download/2.5.1/dune-2.5.1.tbz";
      };
      version = "2.5.1";
    };
    duration = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1ki5q3czl28bj1xdc0fw7h7qw7fxk9n3az2za12521z56yxlgfiq";
        package = "packages/duration/duration.0.1.3";
      };
      pname = "duration";
      src = pkgs.fetchurl 
      {
        sha256 = "0m9r0ayhpl98g9vdxrbjdcllns274jilic5v8xj1x7dphw21p95h";
        url = "https://github.com/hannesm/duration/releases/download/0.1.3/duration-0.1.3.tbz";
      };
      version = "0.1.3";
    };
    eqaf = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        base64 = selection.base64 or null;
        bigarray-compat = selection.bigarray-compat or null;
        crowbar = selection.crowbar or null;
        cstruct = selection.cstruct or null;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1r8yp83hbr3yv5y6y5sxry0lsbz92m0w6jn8kc10wvvzh5bab2aw";
        package = "packages/eqaf/eqaf.0.7";
      };
      pname = "eqaf";
      src = pkgs.fetchurl 
      {
        sha256 = "1q09pwhs121vpficl2af1yzs4y7dd9bc1lcxbqyfc4x4m6p6drhh";
        url = "https://github.com/mirage/eqaf/releases/download/v0.7/eqaf-v0.7.tbz";
      };
      version = "0.7";
    };
    fiat-p256 = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        asn1-combinators = selection.asn1-combinators or null;
        benchmark = selection.benchmark or null;
        bigarray-compat = selection.bigarray-compat;
        cstruct = selection.cstruct;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        eqaf = selection.eqaf;
        hex = selection.hex;
        mirage-xen-posix = selection.mirage-xen-posix or null;
        ocaml-freestanding = selection.ocaml-freestanding or null;
        ppx_deriving_yojson = selection.ppx_deriving_yojson or null;
        rresult = selection.rresult or null;
        stdlib-shims = selection.stdlib-shims or null;
        yojson = selection.yojson or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1jsh1kqml4sqsg6lr5qxcjp67q7hbsyga8mmjl5kmlh19dwfpkdr";
        package = "packages/fiat-p256/fiat-p256.0.2.1";
      };
      pname = "fiat-p256";
      src = pkgs.fetchurl 
      {
        sha256 = "0086h9qkvnqfm8acrxqbki54z619nj73x7f0d01v5vg2naznx7w9";
        url = "https://github.com/mirage/fiat/releases/download/v0.2.1/fiat-p256-v0.2.1.tbz";
      };
      version = "0.2.1";
    };
    fieldslib = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1abs881bnis5xj93jv7xg34cyph5jj683g2apas4sgi8k1wkg1iz";
        package = "packages/fieldslib/fieldslib.v0.13.0";
      };
      pname = "fieldslib";
      src = pkgs.fetchurl 
      {
        sha256 = "07bpb1bi5rlim7lfkfd5m2k7n222grslbzh9hjpy7dhq7nm8fy0p";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/fieldslib-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    fmt = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix or null;
        cmdliner = selection.cmdliner or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        seq = selection.seq;
        stdlib-shims = selection.stdlib-shims;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1jv1qj26idvi2nazvna4aaclp9wzlzwmmg57n5cx2f9ia87qh267";
        package = "packages/fmt/fmt.0.8.8";
      };
      pname = "fmt";
      src = pkgs.fetchurl 
      {
        sha256 = "1iy0rwknd302mr15328g805k210xyigxbija6fzqqfzyb43azvk4";
        url = "https://erratique.ch/software/fmt/releases/fmt-0.8.8.tbz";
      };
      version = "0.8.8";
    };
    functoria-runtime = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        cmdliner = selection.cmdliner;
        dune = selection.dune;
        fmt = selection.fmt;
        functoria = selection.functoria or null;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1578fby9ailffn3clg5mb670568hsrxk0asbmc0gg9xd6pk78aj8";
        package = "packages/functoria-runtime/functoria-runtime.3.0.3";
      };
      pname = "functoria-runtime";
      src = pkgs.fetchurl 
      {
        sha256 = "08wv2890gz7ci1fa2b3z4cvqf98nqb09f89y08kcmnsirlbbzlfh";
        url = "https://github.com/mirage/functoria/releases/download/v3.0.3/functoria-v3.0.3.tbz";
      };
      version = "3.0.3";
    };
    gmap = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        dune = selection.dune;
        fmt = selection.fmt or null;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0pliwm7xynn6a810zg2ywp1nxwqjs9y7akx5lslhk4h63j41i5ac";
        package = "packages/gmap/gmap.0.3.0";
      };
      pname = "gmap";
      src = pkgs.fetchurl 
      {
        sha256 = "073wa0lrb0jj706j87cwzf1a8d1ff14100mnrjs8z3xc4ri9xp84";
        url = "https://github.com/hannesm/gmap/releases/download/0.3.0/gmap-0.3.0.tbz";
      };
      version = "0.3.0";
    };
    hacl_x25519 = 
    {
      opamInputs = 
      {
        benchmark = selection.benchmark or null;
        cstruct = selection.cstruct;
        dune = selection.dune;
        eqaf = selection.eqaf;
        hex = selection.hex or null;
        mirage-xen-posix = selection.mirage-xen-posix or null;
        ocaml = selection.ocaml;
        ocaml-freestanding = selection.ocaml-freestanding or null;
        ppx_blob = selection.ppx_blob or null;
        ppx_deriving_yojson = selection.ppx_deriving_yojson or null;
        stdlib-shims = selection.stdlib-shims or null;
        yojson = selection.yojson or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:171r5mfdp1v9c8wf969mibxkvpnr4lxgjsjpwgvwakyi3a2rr117";
        package = "packages/hacl_x25519/hacl_x25519.0.1.1";
      };
      pname = "hacl_x25519";
      src = pkgs.fetchurl 
      {
        sha256 = "187khbx1myh942c2v5f7wbms2hmhmgn57ik25djhnryln32c0874";
        url = "https://github.com/mirage/hacl/releases/download/v0.1.1/hacl_x25519-v0.1.1.tbz";
      };
      version = "0.1.1";
    };
    hex = 
    {
      opamInputs = 
      {
        bigarray-compat = selection.bigarray-compat;
        cstruct = selection.cstruct;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1p6fbjw8ymp4i5w1v6lcslvc7dq1pkz364kbi22jn6zvm9fpg9k6";
        package = "packages/hex/hex.1.4.0";
      };
      pname = "hex";
      src = pkgs.fetchurl 
      {
        sha256 = "07b9y0lmnflsslkrm6xilkj40n8sf2hjqkyqghnk7sw5l0plkqsp";
        url = "https://github.com/mirage/ocaml-hex/releases/download/v1.4.0/hex-v1.4.0.tbz";
      };
      version = "1.4.0";
    };
    hkdf = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        cstruct = selection.cstruct;
        dune = selection.dune;
        mirage-crypto = selection.mirage-crypto;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0bdiwwqjc58xn851vyi6ghsbw0h6bkvsy5hbc5wqgmfrz29x4q8a";
        package = "packages/hkdf/hkdf.1.0.4";
      };
      pname = "hkdf";
      src = pkgs.fetchurl 
      {
        sha256 = "0nzx6vzbc1hh6vx1ly8df4b16lgps6zjpp9mjycsnnn49bddc9mr";
        url = "https://github.com/hannesm/ocaml-hkdf/releases/download/v1.0.4/hkdf-v1.0.4.tbz";
      };
      version = "1.0.4";
    };
    ipaddr = 
    {
      opamInputs = 
      {
        domain-name = selection.domain-name;
        dune = selection.dune;
        macaddr = selection.macaddr;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        ppx_sexp_conv = selection.ppx_sexp_conv or null;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0m6v710hdhra2jr04hypkg9l5msnnbzr862cyiayvdj7bz2infhv";
        package = "packages/ipaddr/ipaddr.4.0.0";
      };
      pname = "ipaddr";
      src = pkgs.fetchurl 
      {
        sha256 = "0agwb4dy5agwviz4l7gpv280g1wcgfl921k1ykfwq80b46fbyjkg";
        url = "https://github.com/mirage/ocaml-ipaddr/releases/download/v4.0.0/ipaddr-v4.0.0.tbz";
      };
      version = "4.0.0";
    };
    ipaddr-sexp = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ipaddr = selection.ipaddr;
        ipaddr-cstruct = selection.ipaddr-cstruct or null;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        ppx_sexp_conv = selection.ppx_sexp_conv;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:06l5w0l7pc5c8s6jlrpsaasyymgqmgii77yvjjp22ij9k0lf7l24";
        package = "packages/ipaddr-sexp/ipaddr-sexp.4.0.0";
      };
      pname = "ipaddr-sexp";
      src = pkgs.fetchurl 
      {
        sha256 = "0agwb4dy5agwviz4l7gpv280g1wcgfl921k1ykfwq80b46fbyjkg";
        url = "https://github.com/mirage/ocaml-ipaddr/releases/download/v4.0.0/ipaddr-v4.0.0.tbz";
      };
      version = "4.0.0";
    };
    jsonm = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
        uchar = selection.uchar;
        uutf = selection.uutf;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0dj8ibg6j4r4a7v7g6d6q3h4m23jv3pxwc7nam4zzbc7h2k69dy9";
        package = "packages/jsonm/jsonm.1.0.1";
      };
      pname = "jsonm";
      src = pkgs.fetchurl 
      {
        sha256 = "1176dcmxb11fnw49b7yysvkjh0kpzx4s48lmdn5psq9vshp5c29w";
        url = "http://erratique.ch/software/jsonm/releases/jsonm-1.0.1.tbz";
      };
      version = "1.0.1";
    };
    lambdasoup = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        markup = selection.markup;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1x7zqs23habgdwg1z1n3q9q9q3id3yqq3d8ad89c8a9b2g2cd8w5";
        package = "packages/lambdasoup/lambdasoup.0.7.1";
      };
      pname = "lambdasoup";
      src = pkgs.fetchurl 
      {
        sha256 = "0yncrskyhwdxgf815gbdnq35n6w83j1qnd00pr3yhk679lqi4q57";
        url = "https://github.com/aantron/lambdasoup/archive/0.7.1.tar.gz";
      };
      version = "0.7.1";
    };
    logs = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads or null;
        cmdliner = selection.cmdliner or null;
        fmt = selection.fmt or null;
        js_of_ocaml = selection.js_of_ocaml or null;
        lwt = selection.lwt or null;
        mtime = selection.mtime or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1k797gb7f2s1hlqyqsq2xyq9gm20l5q2iwh26bs44f3bp3gklg1a";
        package = "packages/logs/logs.0.7.0";
      };
      pname = "logs";
      src = pkgs.fetchurl 
      {
        sha256 = "1jnmd675wmsmdwyb5mx5b0ac66g4c6gpv5s4mrx2j6pb0wla1x46";
        url = "https://erratique.ch/software/logs/releases/logs-0.7.0.tbz";
      };
      version = "0.7.0";
    };
    lwt = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads or null;
        base-unix = selection.base-unix or null;
        conf-libev = selection.conf-libev or null;
        cppo = selection.cppo;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        mmap = selection.mmap;
        ocaml = selection.ocaml;
        ocaml-syntax-shims = selection.ocaml-syntax-shims or null;
        ocplib-endian = selection.ocplib-endian;
        result = selection.result;
        seq = selection.seq;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1b83y1ccdk4f38961sf0bfawxyb6r0gc88bvz8xzh5hb88s52hbm";
        package = "packages/lwt/lwt.5.3.0";
      };
      pname = "lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "1barwvlyqd3xiqhqr01yrcygjvn26yz0rdh68rgnhyx0g21r5kiq";
        url = "https://github.com/ocsigen/lwt/archive/5.3.0.tar.gz";
      };
      version = "5.3.0";
    };
    lwt_ppx = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ppx_tools_versioned = selection.ppx_tools_versioned;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0f22rsa2rgv23wmx1bgfzj4qjl2apqnpq6sh2dx393hw065m6whr";
        package = "packages/lwt_ppx/lwt_ppx.2.0.1";
      };
      pname = "lwt_ppx";
      src = pkgs.fetchurl 
      {
        sha256 = "0cmim5s7ay72pxpc66bmxmnj5lbg5yvm0ydrpnfh3nyhlcyjphcp";
        url = "https://github.com/ocsigen/lwt/archive/5.2.0.tar.gz";
      };
      version = "2.0.1";
    };
    lwt_ssl = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        ssl = selection.ssl;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0ix6qqsxca3fmfhf6x91q2nv1safa71d0xw6rlhiy7njpp9dqaii";
        package = "packages/lwt_ssl/lwt_ssl.1.1.3";
      };
      pname = "lwt_ssl";
      src = pkgs.fetchurl 
      {
        sha256 = "0dxxkif4a667ndk14sn8ka4x4gck0gvw4sc12jb84rcq5k15jlkp";
        url = "https://github.com/ocsigen/lwt_ssl/archive/1.1.3.tar.gz";
      };
      version = "1.1.3";
    };
    macaddr = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        ppx_sexp_conv = selection.ppx_sexp_conv or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1dm8ykic9j29d8phlf0irs66swjj6cvyd8g8xalw6382nhpf3a8v";
        package = "packages/macaddr/macaddr.4.0.0";
      };
      pname = "macaddr";
      src = pkgs.fetchurl 
      {
        sha256 = "0agwb4dy5agwviz4l7gpv280g1wcgfl921k1ykfwq80b46fbyjkg";
        url = "https://github.com/mirage/ocaml-ipaddr/releases/download/v4.0.0/ipaddr-v4.0.0.tbz";
      };
      version = "4.0.0";
    };
    magic-mime = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0d8ici4l55iywi80a5rp2mhzni1ppp16vb9f4zsml1898cd92p7l";
        package = "packages/magic-mime/magic-mime.1.1.2";
      };
      pname = "magic-mime";
      src = pkgs.fetchurl 
      {
        sha256 = "1sq4rfd9m3693cnzlbds4qh1xpvrv1iz1s1f75nvacbmfjy0nn8c";
        url = "https://github.com/mirage/ocaml-magic-mime/releases/download/v1.1.2/magic-mime-v1.1.2.tbz";
      };
      version = "1.1.2";
    };
    markup = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        uchar = selection.uchar;
        uutf = selection.uutf;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0wa9bk2yqrqcl7ha7ywlbrlvd6nri5rkd3b6a7b27dj7hwlh064q";
        package = "packages/markup/markup.0.8.2";
      };
      pname = "markup";
      src = pkgs.fetchurl 
      {
        sha256 = "05yxfnl56clx5s2iyxrw7xj64c998kzz47280kvv49x7r1gzp6qs";
        url = "https://github.com/aantron/markup.ml/archive/0.8.2.tar.gz";
      };
      version = "0.8.2";
    };
    mirage-clock = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0ps2a3ynb6kc287jqarjpvqhzi9z4a4jpgb4nh9q2j7rv8sqjv8r";
        package = "packages/mirage-clock/mirage-clock.3.0.1";
      };
      pname = "mirage-clock";
      src = pkgs.fetchurl 
      {
        sha256 = "12m2dph69r843clrbcgfjj2gcxmq2kdb7g5d91kfj16g13b0vsa3";
        url = "https://github.com/mirage/mirage-clock/releases/download/v3.0.1/mirage-clock-v3.0.1.tbz";
      };
      version = "3.0.1";
    };
    mirage-crypto = 
    {
      opamInputs = 
      {
        conf-pkg-config = selection.conf-pkg-config;
        cstruct = selection.cstruct;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        mirage-xen-posix = selection.mirage-xen-posix or null;
        ocaml = selection.ocaml;
        ocaml-freestanding = selection.ocaml-freestanding or null;
        ounit = selection.ounit or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0sgay4lj5c5d3w1jc582kx6cikhdy71nwmpk36mhal26d465651r";
        package = "packages/mirage-crypto/mirage-crypto.0.7.0";
      };
      pname = "mirage-crypto";
      src = pkgs.fetchurl 
      {
        sha256 = "0k7kllv3bh192yj6p9dk2z81r56w7x2kyr46pxygb5gnhqqxcncf";
        url = "https://github.com/mirage/mirage-crypto/releases/download/v0.7.0/mirage-crypto-v0.7.0.tbz";
      };
      version = "0.7.0";
    };
    mirage-crypto-pk = 
    {
      opamInputs = 
      {
        conf-gmp-powm-sec = selection.conf-gmp-powm-sec;
        cstruct = selection.cstruct;
        dune = selection.dune;
        eqaf = selection.eqaf;
        mirage-crypto = selection.mirage-crypto;
        mirage-crypto-rng = selection.mirage-crypto-rng;
        mirage-no-solo5 = selection.mirage-no-solo5 or null;
        mirage-no-xen = selection.mirage-no-xen or null;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        randomconv = selection.randomconv or null;
        rresult = selection.rresult;
        sexplib = selection.sexplib;
        zarith = selection.zarith;
        zarith-freestanding = selection.zarith-freestanding or null;
        zarith-xen = selection.zarith-xen or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0wpba6jij1dh7wykzv5yq0xq6m7lxpimy6xrlxhb16iz1qwbl5mk";
        package = "packages/mirage-crypto-pk/mirage-crypto-pk.0.7.0";
      };
      pname = "mirage-crypto-pk";
      src = pkgs.fetchurl 
      {
        sha256 = "0k7kllv3bh192yj6p9dk2z81r56w7x2kyr46pxygb5gnhqqxcncf";
        url = "https://github.com/mirage/mirage-crypto/releases/download/v0.7.0/mirage-crypto-v0.7.0.tbz";
      };
      version = "0.7.0";
    };
    mirage-crypto-rng = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        duration = selection.duration;
        logs = selection.logs;
        lwt = selection.lwt;
        mirage-clock = selection.mirage-clock;
        mirage-clock-unix = selection.mirage-clock-unix or null;
        mirage-crypto = selection.mirage-crypto;
        mirage-runtime = selection.mirage-runtime;
        mirage-time = selection.mirage-time;
        mirage-time-unix = selection.mirage-time-unix or null;
        mirage-unix = selection.mirage-unix or null;
        mtime = selection.mtime;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        randomconv = selection.randomconv or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:07q6ygdp2czrx6xfhgznd80yj053ria8298s3mfc4jvkhayvshjp";
        package = "packages/mirage-crypto-rng/mirage-crypto-rng.0.7.0";
      };
      pname = "mirage-crypto-rng";
      src = pkgs.fetchurl 
      {
        sha256 = "0k7kllv3bh192yj6p9dk2z81r56w7x2kyr46pxygb5gnhqqxcncf";
        url = "https://github.com/mirage/mirage-crypto/releases/download/v0.7.0/mirage-crypto-v0.7.0.tbz";
      };
      version = "0.7.0";
    };
    mirage-no-solo5 = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:18h50v7lp39sis6jy46h35vij0v1z5fr76c4y2h4b72c40fwwck1";
        package = "packages/mirage-no-solo5/mirage-no-solo5.1";
      };
      pname = "mirage-no-solo5";
      src = null;
      version = "1";
    };
    mirage-no-xen = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1nvmvay3nkl8ljw9f46dwv3jppqbbkp0pxf9f1gq4spckb8ysmkh";
        package = "packages/mirage-no-xen/mirage-no-xen.1";
      };
      pname = "mirage-no-xen";
      src = null;
      version = "1";
    };
    mirage-runtime = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        fmt = selection.fmt;
        functoria-runtime = selection.functoria-runtime;
        ipaddr = selection.ipaddr;
        logs = selection.logs;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:106dsbzi3hyd7a447j469yxvhy3g53lh4838jbsdkbdzjr3xx3bi";
        package = "packages/mirage-runtime/mirage-runtime.3.7.6";
      };
      pname = "mirage-runtime";
      src = pkgs.fetchurl 
      {
        sha256 = "060gl9n6ha131kf6668i1w5wcblz7p47wcrpq2zdi8v5imdlnrpq";
        url = "https://github.com/mirage/mirage/releases/download/v3.7.6/mirage-v3.7.6.tbz";
      };
      version = "3.7.6";
    };
    mirage-time = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1a2ivyx65c02px4vpbcf40fcavmxj3p88crwrjyayyzml8ibf05v";
        package = "packages/mirage-time/mirage-time.2.0.1";
      };
      pname = "mirage-time";
      src = pkgs.fetchurl 
      {
        sha256 = "1w6mm4g7fc19cs0ncs0s9fsnb1k1s04qqzs9bsqvq8ngsb90cbh0";
        url = "https://github.com/mirage/mirage-time/releases/download/v2.0.1/mirage-time-v2.0.1.tbz";
      };
      version = "2.0.1";
    };
    mmap = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0mjn2jxrfwlrzppjnc6pg47ncm0ri6a1hn3kj2yz10rmpca25bsm";
        package = "packages/mmap/mmap.1.1.0";
      };
      pname = "mmap";
      src = pkgs.fetchurl 
      {
        sha256 = "0l6waidal2n8mkdn74avbslvc10sf49f5d889n838z03pra5chsc";
        url = "https://github.com/mirage/mmap/releases/download/v1.1.0/mmap-v1.1.0.tbz";
      };
      version = "1.1.0";
    };
    mtime = 
    {
      opamInputs = 
      {
        js_of_ocaml = selection.js_of_ocaml or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1pvlkp6n3z75mjc5y0nvhf2s7fmzj8k84chwzvmyrpb786s9gqyh";
        package = "packages/mtime/mtime.1.2.0";
      };
      pname = "mtime";
      src = pkgs.fetchurl 
      {
        sha256 = "0zm1jvqkz3ghznfsm3bbv9q2zinp9grggdf7k9phjazjvny68xb8";
        url = "https://erratique.ch/software/mtime/releases/mtime-1.2.0.tbz";
      };
      version = "1.2.0";
    };
    num = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1x42ndx4shcwgn4c63h57j27bs08y8pyn4sqiizwl47bkcwhq1gj";
        package = "packages/num/num.1.3";
      };
      pname = "num";
      src = pkgs.fetchurl 
      {
        sha256 = "0kg96f7zapbb8hy6n9c53snwqs4rn5xvbdf5nb2m75gah47c6yag";
        url = "https://github.com/ocaml/num/archive/v1.3.tar.gz";
      };
      version = "1.3";
    };
    ocaml = 
    {
      opamInputs = 
      {
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
        ocaml-config = selection.ocaml-config;
        ocaml-system = selection.ocaml-system or null;
        ocaml-variants = selection.ocaml-variants or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1j9xgxnbgzrar4rwynm7jd0bi3f5qwwkgyxvk1pd8iazvn81pgya";
        package = "packages/ocaml/ocaml.4.10.0";
      };
      pname = "ocaml";
      src = null;
      version = "4.10.0";
    };
    ocaml-base-compiler = 
    {
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0wavwn6cq999v787fsxf0v2z71h1vwhxwqbidznc4f9ccwjcdc76";
        package = "packages/ocaml-base-compiler/ocaml-base-compiler.4.10.0";
      };
      pname = "ocaml-base-compiler";
      src = pkgs.fetchurl 
      {
        sha256 = "0fdw4abyp37q7acqaqawy64gakpg7xckw5ssfpn8dbwxlzqf1fjq";
        url = "https://github.com/ocaml/ocaml/archive/4.10.0.tar.gz";
      };
      version = "4.10.0";
    };
    ocaml-compiler-libs = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:13l8hnv1xclgpayfv8w827ly7il87j4qll7x15sbdrqk980c3jyg";
        package = "packages/ocaml-compiler-libs/ocaml-compiler-libs.v0.12.1";
      };
      pname = "ocaml-compiler-libs";
      src = pkgs.fetchurl 
      {
        sha256 = "014shj6g10xmclfps22igkiij5jysn8p6lv75h0s4vzjj9wj23yj";
        url = "https://github.com/janestreet/ocaml-compiler-libs/archive/v0.12.1.tar.gz";
      };
      version = "v0.12.1";
    };
    ocaml-config = 
    {
      opamInputs = 
      {
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
        ocaml-system = selection.ocaml-system or null;
        ocaml-variants = selection.ocaml-variants or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0g5s0yysgqdrbgx7vyh56fhx59xypw6hdwlcbzbqcgvj4zp4yy0c";
        package = "packages/ocaml-config/ocaml-config.1";
      };
      pname = "ocaml-config";
      src = null;
      version = "1";
    };
    ocaml-migrate-parsetree = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_derivers = selection.ppx_derivers;
        result = selection.result;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:02ni76lc49343xc1wd58wwaacwkwc6dsgd6xwwsj2rnc4flr0wh9";
        package = "packages/ocaml-migrate-parsetree/ocaml-migrate-parsetree.1.7.3";
      };
      pname = "ocaml-migrate-parsetree";
      src = pkgs.fetchurl 
      {
        sha256 = "0mgv4h1dffgl4y51bhwrr0yj7q5x9znp4j3ij3r8fss7rxxp31bd";
        url = "https://github.com/ocaml-ppx/ocaml-migrate-parsetree/releases/download/v1.7.3/ocaml-migrate-parsetree-v1.7.3.tbz";
      };
      version = "1.7.3";
    };
    ocaml-syntax-shims = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0zhmv9pr3rryn8a08g8vka0viscryd7fkn5gj2294pw6fygv5m4h";
        package = "packages/ocaml-syntax-shims/ocaml-syntax-shims.1.0.0";
      };
      pname = "ocaml-syntax-shims";
      src = pkgs.fetchurl 
      {
        sha256 = "1j7848khli4p7j8i2kmnvhdnhcwhy3zgdpf5ds5ic30ax69y3cl9";
        url = "https://github.com/ocaml-ppx/ocaml-syntax-shims/releases/download/1.0.0/ocaml-syntax-shims-1.0.0.tbz";
      };
      version = "1.0.0";
    };
    ocamlbuild = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0hrzb4fgz7qh7cr65j5yq6fai82fhyl6bp8s9pwcj1a2yhczbviv";
        package = "packages/ocamlbuild/ocamlbuild.0.14.0";
      };
      pname = "ocamlbuild";
      src = pkgs.fetchurl 
      {
        sha256 = "0y1fskw9rg2y1zgb7whv3v8v4xw04svgxslf3856q2aqd7lrrcl7";
        url = "https://github.com/ocaml/ocamlbuild/archive/0.14.0.tar.gz";
      };
      version = "0.14.0";
    };
    ocamlfind = 
    {
      opamInputs = 
      {
        conf-m4 = selection.conf-m4;
        graphics = selection.graphics or null;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:04z3rq1y20wfzmwvjm9wlg89cqqs8n37inhbwp4x2dsqbn0hqd81";
        package = "packages/ocamlfind/ocamlfind.1.8.1";
      };
      pname = "ocamlfind";
      src = pkgs.fetchurl 
      {
        sha256 = "00s3sfb02pnjmkax25pcnljcnhcggiliccfz69a72ic7gsjwz1cf";
        url = "http://download.camlcity.org/download/findlib-1.8.1.tar.gz";
      };
      version = "1.8.1";
    };
    ocplib-endian = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        cppo = selection.cppo;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0j5ymxa4ky208k8m4bprvmvbqf9jnr4d0xwdaivznbv85jq9hw4q";
        package = "packages/ocplib-endian/ocplib-endian.1.1";
      };
      pname = "ocplib-endian";
      src = pkgs.fetchurl 
      {
        sha256 = "0qy5q7p11gxi5anhvi8jj6mr80ml0ih8lax5k579rsr2hsp3sns5";
        url = "https://github.com/OCamlPro/ocplib-endian/archive/1.1.tar.gz";
      };
      version = "1.1";
    };
    parsexp = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0cw5wn470zqir9vhn9zp2d5glax6ygfmrz25j2ihx8i2m21pvwaa";
        package = "packages/parsexp/parsexp.v0.13.0";
      };
      pname = "parsexp";
      src = pkgs.fetchurl 
      {
        sha256 = "0m144jj63nmw4j88gbmrmkfr3f5bciln00gz1n13h61s6rzz01nq";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/parsexp-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    ppx_cstruct = 
    {
      opamInputs = 
      {
        cppo = selection.cppo or null;
        cstruct = selection.cstruct;
        cstruct-sexp = selection.cstruct-sexp or null;
        cstruct-unix = selection.cstruct-unix or null;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ounit = selection.ounit or null;
        ppx_sexp_conv = selection.ppx_sexp_conv or null;
        ppx_tools_versioned = selection.ppx_tools_versioned;
        sexplib = selection.sexplib;
        stdlib-shims = selection.stdlib-shims;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0mvlch57pv3fcf4lh93ph2fb2nbhx9b789spks5wigi48srzhi81";
        package = "packages/ppx_cstruct/ppx_cstruct.5.1.1";
      };
      pname = "ppx_cstruct";
      src = pkgs.fetchurl 
      {
        sha256 = "1wzy15x5ra0v3l3rww6iamnv05za58wfvicrwkz74y2zp0ng9lam";
        url = "https://github.com/mirage/ocaml-cstruct/releases/download/v5.1.1/cstruct-v5.1.1.tbz";
      };
      version = "5.1.1";
    };
    ppx_derivers = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0r8rjp4m5jfbf3wz8qlgh82pxjws4arjwxhqq0zjglby6l6h8p3x";
        package = "packages/ppx_derivers/ppx_derivers.1.2.1";
      };
      pname = "ppx_derivers";
      src = pkgs.fetchurl 
      {
        sha256 = "159vqy616ni18mn0dlv8c2y4h7mb4hahwjn53yrr59yyhzhmwndn";
        url = "https://github.com/ocaml-ppx/ppx_derivers/archive/1.2.1.tar.gz";
      };
      version = "1.2.1";
    };
    ppx_fields_conv = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        fieldslib = selection.fieldslib;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:15piy3665gkqvingvphjm51hvskqxhfx1yazrl5qik48y4gwfcf2";
        package = "packages/ppx_fields_conv/ppx_fields_conv.v0.13.0";
      };
      pname = "ppx_fields_conv";
      src = pkgs.fetchurl 
      {
        sha256 = "03j9vmbs60ivga1w2qcnjn2d149yzkns2q341ni3qqa570lcwzsj";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/ppx_fields_conv-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    ppx_sexp_conv = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0vd5bins4dhwnp8w552vafshsqj1gm9hna5y0xxpf9bqhkvr1426";
        package = "packages/ppx_sexp_conv/ppx_sexp_conv.v0.13.0";
      };
      pname = "ppx_sexp_conv";
      src = pkgs.fetchurl 
      {
        sha256 = "0yppy47zjn8nb73lnk4d3lhpmcia1rr8bka56n32sla4yz1y148n";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/ppx_sexp_conv-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    ppx_tools_versioned = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:17y8bp2ngxzagxkg4a62nib3bq8wcd17myffa7zpx55yxkk9sl85";
        package = "packages/ppx_tools_versioned/ppx_tools_versioned.5.4.0";
      };
      pname = "ppx_tools_versioned";
      src = pkgs.fetchurl 
      {
        sha256 = "0sw2676vgbsj133lgs3sl8494fhfldafzvgw4j4dnb1wqwha6pxy";
        url = "https://github.com/ocaml-ppx/ppx_tools_versioned/archive/5.4.0.tar.gz";
      };
      version = "5.4.0";
    };
    ppxlib = 
    {
      opamInputs = 
      {
        base = selection.base;
        cinaps = selection.cinaps or null;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-compiler-libs = selection.ocaml-compiler-libs;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ocamlfind = selection.ocamlfind or null;
        ppx_derivers = selection.ppx_derivers;
        stdio = selection.stdio;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:09w6l1f4y8h8isq6zwb29zk0g2ahzd05dkaw7165x2mhf42xjfkm";
        package = "packages/ppxlib/ppxlib.0.13.0";
      };
      pname = "ppxlib";
      src = pkgs.fetchurl 
      {
        sha256 = "1n9rxqf3i45xm723vvr1bh568ydqlbfv1m88c5zhw3jh139z7qc1";
        url = "https://github.com/ocaml-ppx/ppxlib/releases/download/0.13.0/ppxlib-0.13.0.tbz";
      };
      version = "0.13.0";
    };
    ptime = 
    {
      opamInputs = 
      {
        js_of_ocaml = selection.js_of_ocaml or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        result = selection.result;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0ldzn2jmz8c3n9rr4mqyfa92lkb3378cmik3klznbln7lsf4fa1v";
        package = "packages/ptime/ptime.0.8.5";
      };
      pname = "ptime";
      src = pkgs.fetchurl 
      {
        sha256 = "1fxq57xy1ajzfdnvv5zfm7ap2nf49znw5f9gbi4kb9vds942ij27";
        url = "https://erratique.ch/software/ptime/releases/ptime-0.8.5.tbz";
      };
      version = "0.8.5";
    };
    re = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        seq = selection.seq;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:10m5h5myw3pnjvk7z1j7hhx18zpbm7kad2196ljgvj7y169zba61";
        package = "packages/re/re.1.9.0";
      };
      pname = "re";
      src = pkgs.fetchurl 
      {
        sha256 = "1gas4ky49zgxph3870nffzkr6y41kkpqp4nj38pz1gh49zcf12aj";
        url = "https://github.com/ocaml/ocaml-re/releases/download/1.9.0/re-1.9.0.tbz";
      };
      version = "1.9.0";
    };
    result = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1c7lw8dbchllz3rl801xwpm82r427vnrv7b7kqh0gwjglya50y28";
        package = "packages/result/result.1.5";
      };
      pname = "result";
      src = pkgs.fetchurl 
      {
        sha256 = "0cpfp35fdwnv3p30a06wd0py3805qxmq3jmcynjc3x2qhlimwfkw";
        url = "https://github.com/janestreet/result/releases/download/1.5/result-1.5.tbz";
      };
      version = "1.5";
    };
    rresult = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        result = selection.result;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:10vaq82rzip2rn1rbq27pjckvqassjh1n58pnsypldqaahxnbca6";
        package = "packages/rresult/rresult.0.6.0";
      };
      pname = "rresult";
      src = pkgs.fetchurl 
      {
        sha256 = "1k69a3gvrk7f2cshwjzvk7818f0bwxhacgd14wxy6d4gmrggci86";
        url = "http://erratique.ch/software/rresult/releases/rresult-0.6.0.tbz";
      };
      version = "0.6.0";
    };
    rss_to_mail = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        cmdliner = selection.cmdliner;
        cohttp-lwt-unix = selection.cohttp-lwt-unix;
        colombe = selection.colombe;
        cstruct-unix = selection.cstruct-unix;
        dune = selection.dune;
        lambdasoup = selection.lambdasoup;
        logs = selection.logs;
        lwt = selection.lwt;
        lwt_ppx = selection.lwt_ppx;
        lwt_ssl = selection.lwt_ssl;
        markup = selection.markup;
        mdx = selection.mdx or null;
        ocaml = selection.ocaml;
        ptime = selection.ptime;
        sendmail-lwt = selection.sendmail-lwt;
        sexplib = selection.sexplib;
        sexplib0 = selection.sexplib0;
        tyxml = selection.tyxml;
        tyxml-ppx = selection.tyxml-ppx;
        uri = selection.uri;
        x509 = selection.x509;
        xmlm = selection.xmlm;
      };
      opamSrc = "rss_to_mail.opam";
      pname = "rss_to_mail";
      src = self.directSrc "rss_to_mail";
      version = "dev";
    };
    sendmail = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        base64 = selection.base64;
        colombe = selection.colombe;
        dune = selection.dune;
        emile = selection.emile or null;
        logs = selection.logs;
        mrmime = selection.mrmime or null;
        ocaml = selection.ocaml;
        tls = selection.tls;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0bc1vf1hkxm3z3l0c62av4zwrpy9db8qvh2b7wi8xkl479y3p8rc";
        package = "packages/sendmail/sendmail.0.2.0";
      };
      pname = "sendmail";
      src = pkgs.fetchurl 
      {
        sha256 = "1bbff1a9bc8hrlfk8b4gf4cdnv8zph3rkcz28wd00vhs1rpp7hhj";
        url = "https://github.com/mirage/colombe/releases/download/v0.2.0/colombe-v0.2.0.tbz";
      };
      version = "0.2.0";
    };
    sendmail-lwt = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        domain-name = selection.domain-name;
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        sendmail = selection.sendmail;
        tls = selection.tls;
        x509 = selection.x509;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1jvfv9mnjy6viq6h7kdrfqzjkn7ng0zywyrmjwc4s5y4wcx73a8q";
        package = "packages/sendmail-lwt/sendmail-lwt.0.2.0";
      };
      pname = "sendmail-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "1bbff1a9bc8hrlfk8b4gf4cdnv8zph3rkcz28wd00vhs1rpp7hhj";
        url = "https://github.com/mirage/colombe/releases/download/v0.2.0/colombe-v0.2.0.tbz";
      };
      version = "0.2.0";
    };
    seq = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1vm8mk6zm2q3fwnkprl6jib048zr4ysldw0bl74x6wwbxj0vx6k9";
        package = "packages/seq/seq.base";
      };
      pname = "seq";
      src = null;
      version = "base";
    };
    sexplib = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        num = selection.num;
        ocaml = selection.ocaml;
        parsexp = selection.parsexp;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0az4i6jnc9xc5y1ki7ihzd7g6d6vgwi7r2ih6j45ypx5zlmydv81";
        package = "packages/sexplib/sexplib.v0.13.0";
      };
      pname = "sexplib";
      src = pkgs.fetchurl 
      {
        sha256 = "0sfn9i7wydphkqg3156ck0wlibj9mm8w3j52jrgh2qgqgwq3h13v";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/sexplib-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    sexplib0 = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1jvzjhd83ik7siqhjfsrvx9vbbcq5qykix7621nmyh0c40kpghgi";
        package = "packages/sexplib0/sexplib0.v0.13.0";
      };
      pname = "sexplib0";
      src = pkgs.fetchurl 
      {
        sha256 = "08g0w2gnn682c6a82d22b4yv70j7i2vgk0z5imca6nly3ddgdhj3";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/sexplib0-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    ssl = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        conf-libssl = selection.conf-libssl;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1g7a3znmp6w8n59qfyrmaaww7460z7cgby1syl60phs3wfk8096x";
        package = "packages/ssl/ssl.0.5.9";
      };
      pname = "ssl";
      src = pkgs.fetchurl 
      {
        sha256 = "1sk166b2rbdvrvbzc5j4nigh68nh1b04p3pbzk0wjp5gz6m6cg8z";
        url = "https://github.com/savonet/ocaml-ssl/archive/0.5.9.tar.gz";
      };
      version = "0.5.9";
    };
    stdio = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0b3xwxyifn8kg3lfp568s9n7c15mkg74p4clx169xaj16q9gnh60";
        package = "packages/stdio/stdio.v0.13.0";
      };
      pname = "stdio";
      src = pkgs.fetchurl 
      {
        sha256 = "0bb60kb027nfdh5ah76nwy0q3zcdsqydglly61kx7a12yjlcgvwm";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/stdio-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    stdlib-shims = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0l6bfv426xb77qfiv880yy8dcscb2hi5703n9dj32fa3mlxnbg42";
        package = "packages/stdlib-shims/stdlib-shims.0.1.0";
      };
      pname = "stdlib-shims";
      src = pkgs.fetchurl 
      {
        sha256 = "1jv6yb47f66239m7hsz7zzw3i48mjpbvfgpszws48apqx63wjwsk";
        url = "https://github.com/ocaml/stdlib-shims/releases/download/0.1.0/stdlib-shims-0.1.0.tbz";
      };
      version = "0.1.0";
    };
    stringext = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        qtest = selection.qtest or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:15m8a67mps6y22mm5sxpw9b0lldfcmsxim7b331d4qv3l86118gs";
        package = "packages/stringext/stringext.1.6.0";
      };
      pname = "stringext";
      src = pkgs.fetchurl 
      {
        sha256 = "1sh6nafi3i9773j5mlwwz3kxfzdjzsfqj2qibxhigawy5vazahfv";
        url = "https://github.com/rgrinberg/stringext/releases/download/1.6.0/stringext-1.6.0.tbz";
      };
      version = "1.6.0";
    };
    tls = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        cstruct = selection.cstruct;
        cstruct-sexp = selection.cstruct-sexp;
        cstruct-unix = selection.cstruct-unix or null;
        domain-name = selection.domain-name;
        dune = selection.dune;
        fiat-p256 = selection.fiat-p256;
        fmt = selection.fmt;
        hacl_x25519 = selection.hacl_x25519;
        hkdf = selection.hkdf;
        logs = selection.logs;
        lwt = selection.lwt;
        mirage-crypto = selection.mirage-crypto;
        mirage-crypto-pk = selection.mirage-crypto-pk;
        mirage-crypto-rng = selection.mirage-crypto-rng;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        ppx_cstruct = selection.ppx_cstruct;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        ptime = selection.ptime;
        sexplib = selection.sexplib;
        x509 = selection.x509;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1qfv38bbm9hd6p4g1cjcj7bq4y3ia0144cbj6g62qprj0p0hf0nj";
        package = "packages/tls/tls.0.12.0";
      };
      pname = "tls";
      src = pkgs.fetchurl 
      {
        sha256 = "0fy38qmy7rcld1b4qzz4ycl1fr0v1wa7qd24125lpd6hly86fn57";
        url = "https://github.com/mirleft/ocaml-tls/releases/download/v0.12.0/tls-v0.12.0.tbz";
      };
      version = "0.12.0";
    };
    topkg = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0xwbkf7mwwh10s3y2v6badjzcsjz7vzx22rc37dvfd77vgw03vdg";
        package = "packages/topkg/topkg.1.0.1";
      };
      pname = "topkg";
      src = pkgs.fetchurl 
      {
        sha256 = "18ysdrd665mhvzqp3s86kymkd1vl6qm7kakzda1h6mr4mnkawi00";
        url = "http://erratique.ch/software/topkg/releases/topkg-1.0.1.tbz";
      };
      version = "1.0.1";
    };
    tyxml = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        dune = selection.dune;
        ocaml = selection.ocaml;
        re = selection.re;
        seq = selection.seq;
        uutf = selection.uutf;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1q246zb57qzc8v8a2yznc069jh1rxazd8hbgjs0pgk1dgfy7m4bs";
        package = "packages/tyxml/tyxml.4.4.0";
      };
      pname = "tyxml";
      src = pkgs.fetchurl 
      {
        sha256 = "0c150h2f4c4id73ickkdqkir3jya66m6c7f5jxlp4caw9bfr8qsi";
        url = "https://github.com/ocsigen/tyxml/releases/download/4.4.0/tyxml-4.4.0.tbz";
      };
      version = "4.4.0";
    };
    tyxml-ppx = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        dune = selection.dune;
        markup = selection.markup;
        ocaml = selection.ocaml;
        ppx_tools_versioned = selection.ppx_tools_versioned;
        tyxml = selection.tyxml;
        tyxml-syntax = selection.tyxml-syntax;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1mimh3ffmajq9gr96hmmf3xjj4agmq7mc3dkd57pa1ycskmx9xab";
        package = "packages/tyxml-ppx/tyxml-ppx.4.4.0";
      };
      pname = "tyxml-ppx";
      src = pkgs.fetchurl 
      {
        sha256 = "0c150h2f4c4id73ickkdqkir3jya66m6c7f5jxlp4caw9bfr8qsi";
        url = "https://github.com/ocsigen/tyxml/releases/download/4.4.0/tyxml-4.4.0.tbz";
      };
      version = "4.4.0";
    };
    tyxml-syntax = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_tools_versioned = selection.ppx_tools_versioned;
        re = selection.re;
        uutf = selection.uutf;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1l3xj233d2ci3kh4fpfvmx86dklxiz9xyj918310y3yb1f0iwiqb";
        package = "packages/tyxml-syntax/tyxml-syntax.4.4.0";
      };
      pname = "tyxml-syntax";
      src = pkgs.fetchurl 
      {
        sha256 = "0c150h2f4c4id73ickkdqkir3jya66m6c7f5jxlp4caw9bfr8qsi";
        url = "https://github.com/ocsigen/tyxml/releases/download/4.4.0/tyxml-4.4.0.tbz";
      };
      version = "4.4.0";
    };
    uchar = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:17sfpyj5a1z3knnjvnfa5vql6cj2x9pzgzk8w4jrvd2zii2bwpcl";
        package = "packages/uchar/uchar.0.0.2";
      };
      pname = "uchar";
      src = pkgs.fetchurl 
      {
        sha256 = "1w2saw7zanf9m9ffvz2lvcxvlm118pws2x1wym526xmydhqpyfa7";
        url = "https://github.com/ocaml/uchar/releases/download/v0.0.2/uchar-0.0.2.tbz";
      };
      version = "0.0.2";
    };
    uri = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        ppx_sexp_conv = selection.ppx_sexp_conv or null;
        re = selection.re;
        stringext = selection.stringext;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1dpyvzqbgfmd8q7lvdiyw6w9d423wbfa0whkrdc643vyzy63q8ka";
        package = "packages/uri/uri.3.1.0";
      };
      pname = "uri";
      src = pkgs.fetchurl 
      {
        sha256 = "0hxc2mshmqxz2qmjya47dzf858s6lsf3xvqswpzprkvhv0zq4ln4";
        url = "https://github.com/mirage/ocaml-uri/releases/download/v3.1.0/uri-v3.1.0.tbz";
      };
      version = "3.1.0";
    };
    uri-sexp = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ounit = selection.ounit or null;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        sexplib0 = selection.sexplib0;
        uri = selection.uri;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0szkmh07lp6wnxnhlggc8nqkhwsfgklb20jkfsahjnblaz44n1c1";
        package = "packages/uri-sexp/uri-sexp.3.1.0";
      };
      pname = "uri-sexp";
      src = pkgs.fetchurl 
      {
        sha256 = "0hxc2mshmqxz2qmjya47dzf858s6lsf3xvqswpzprkvhv0zq4ln4";
        url = "https://github.com/mirage/ocaml-uri/releases/download/v3.1.0/uri-v3.1.0.tbz";
      };
      version = "3.1.0";
    };
    uutf = 
    {
      opamInputs = 
      {
        cmdliner = selection.cmdliner or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
        uchar = selection.uchar;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1j4hkk196lg1dsnf6jb1n8y3na606lkfb5vlr0gjb53qc7pdh6cy";
        package = "packages/uutf/uutf.1.0.2";
      };
      pname = "uutf";
      src = pkgs.fetchurl 
      {
        sha256 = "1nx1rly3qj23jzn9yk3x6fwqimcxjd84kv5859vvhdg56psq26p6";
        url = "http://erratique.ch/software/uutf/releases/uutf-1.0.2.tbz";
      };
      version = "1.0.2";
    };
    x509 = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        asn1-combinators = selection.asn1-combinators;
        base64 = selection.base64;
        cstruct = selection.cstruct;
        cstruct-unix = selection.cstruct-unix or null;
        domain-name = selection.domain-name;
        dune = selection.dune;
        fmt = selection.fmt;
        gmap = selection.gmap;
        logs = selection.logs;
        mirage-crypto = selection.mirage-crypto;
        mirage-crypto-pk = selection.mirage-crypto-pk;
        mirage-crypto-rng = selection.mirage-crypto-rng or null;
        ocaml = selection.ocaml;
        ptime = selection.ptime;
        rresult = selection.rresult;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1cybxf9b85j2i4vpz13ffnlxv4dk5ii0ixk433i8kl1f4bg0y4gj";
        package = "packages/x509/x509.0.11.2";
      };
      pname = "x509";
      src = pkgs.fetchurl 
      {
        sha256 = "1b4lcphmlyjhdgqi0brakgjp3diwmrj1y9hx87svi5xklw3zik22";
        url = "https://github.com/mirleft/ocaml-x509/releases/download/v0.11.2/x509-v0.11.2.tbz";
      };
      version = "0.11.2";
    };
    xmlm = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1sllk1bcqdbb67fcimwb9j4z8n0z1z49aqgy65vwsigzymmnjz14";
        package = "packages/xmlm/xmlm.1.3.0";
      };
      pname = "xmlm";
      src = pkgs.fetchurl 
      {
        sha256 = "1rrdxg5kh9zaqmgapy9bhdqyxbbvxxib3bdfg1vhw4rrkp1z0x8n";
        url = "http://erratique.ch/software/xmlm/releases/xmlm-1.3.0.tbz";
      };
      version = "1.3.0";
    };
    zarith = 
    {
      opamInputs = 
      {
        conf-gmp = selection.conf-gmp;
        conf-perl = selection.conf-perl;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:10y477fjig8d6chpmgdmpv683h78kshkmw3dmhi6sjid4gk6pc52";
        package = "packages/zarith/zarith.1.9.1";
      };
      pname = "zarith";
      src = pkgs.fetchurl 
      {
        sha256 = "0pfa271476dic5pvn6kxz3dfswxs6kqm2cxmhdx5xq2ayca05gj9";
        url = "https://github.com/ocaml/Zarith/archive/release-1.9.1.tar.gz";
      };
      version = "1.9.1";
    };
  };
}

